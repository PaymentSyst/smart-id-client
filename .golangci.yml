# golangci-lint configuration for Smart-ID Go Client

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - vendor
    - .git
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_test\\.go$" # Skip some linting for test files

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - (*os.File).Close
      - (*database/sql.Rows).Close

  govet:
    enable-all: true
    disable:
      - fieldalignment # Can be overly strict for readability
      - shadow # Can be overly strict

  gocyclo:
    min-complexity: 15

  gofmt:
    simplify: true

  goimports:
    local-prefixes: github.com/PaymentSyst/smart-id-client

  golint:
    min-confidence: 0.8

  goconst:
    min-len: 3
    min-occurrences: 3
    ignore-tests: true

  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
      - importShadow

  funlen:
    lines: 100
    statements: 50

  gocognit:
    min-complexity: 20

  nestif:
    min-complexity: 5

  lll:
    line-length: 120
    tab-width: 4

  maligned:
    suggest-new: true

  misspell:
    locale: US
    ignore-words:
      - cancelled

  unparam:
    check-exported: false

  unused:
    check-exported: false

  whitespace:
    multi-if: false
    multi-func: false

  wsl:
    strict-append: true
    allow-assign-and-call: true
    allow-multiline-assign: true
    allow-case-trailing-whitespace: true
    allow-cuddle-declarations: false

  revive:
    min-confidence: 0.8
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unused-parameter
      - name: unreachable-code
      - name: redefines-builtin-id

linters:
  enable:
    - bodyclose
    - deadcode
    - depguard
    - dogsled
    - dupl
    - errcheck
    - exportloopref
    - exhaustive
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - rowserrcheck
    - staticcheck
    - structcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - whitespace
    - revive

  disable:
    - asciicheck # Not relevant for this project
    - gochecknoglobals # We may need some globals
    - gocognit # Covered by gocyclo
    - godot # Too strict for comments
    - godox # We want to allow TODO comments
    - goerr113 # Too strict for error handling
    - gofumpt # Conflicts with gofmt
    - goheader # No header requirement
    - gomodguard # Not needed
    - interfacer # Deprecated
    - maligned # Deprecated
    - nestif # Covered by gocyclo
    - prealloc # Can hurt readability
    - scopelint # Deprecated
    - testpackage # Tests can be in same package
    - wsl # Too opinionated

issues:
  exclude-use-default: false
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - goconst
        - gomnd

    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

    # Exclude shadow checking on err variables
    - linters:
        - govet
      text: 'shadow: declaration of "err"'

    # Exclude certain gosec rules for test files
    - path: _test\.go
      text: "G404:" # Weak random number generator is ok for tests

    # Allow unused parameters in interface implementations
    - text: "`.*` is unused"
      linters:
        - unparam
      path: .*\.go

  # Maximum count of issues with the same text. Set to 0 to disable
  max-same-issues: 0

  # Maximum issues count per one linter. Set to 0 to disable
  max-issues-per-linter: 0

  # Independently from option `exclude` we use default exclude patterns,
  # it can be disabled by this option. To list all
  # excluded by default patterns execute `golangci-lint run --help`.
  # Default value for this option is true.
  exclude-use-default: false

  # Show only new issues: if there are unstaged changes or untracked files,
  # only those changes are analyzed, else only changes in HEAD~ are analyzed.
  new: false

  # Fix found issues (if it's supported by the linter)
  fix: false
